name: Release Pipeline

on:
  push:
    tags: [ '*' ]

jobs:
  
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Set up Python 3.11
      uses: actions/setup-python@v2
      with:
        python-version: 3.11

    - name: Install environment
      run: |
        python -m venv ./venv

    - name: Install dependencies
      run: |
        ./venv/scripts/activate
        python -m pip install -r requirements.txt

    # ???
    # - name: Finalize version
    #   run: |
    #     New-Item -ItemType file resources\final

    # - name: mypy src
    #   run: |
    #     ./venv/scripts/activate
    #     mypy src

    - name: Build binaries
      run: |
        ./venv/scripts/activate
        $env:PYTHONPATH=".;./pydcs"
        pyinstaller pyinstaller.spec

    - uses: actions/upload-artifact@v2
      with:
        name: dcs-mission-buzzer
        path: dist/

  release:
    needs: [ build ]
    runs-on: windows-latest
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: dcs-mission-buzzer

    # - name: "Get Version"
    #   id: version        
    #   env:
    #     TAG_NAME: ${{ github.ref }}
    #   run: |
    #     Get-ChildItem -Recurse -Depth 1
    #     $version = ($env:TAG_NAME -split "/") | Select-Object -Last 1
    #     $prerelease = ("2.1.1-alpha3" -match '[^\.\d]').ToString().ToLower()
    #     Write-Host $version
    #     Write-Host $prerelease
    #     Write-Output "::set-output name=number::$version"
    #     Write-Output "::set-output name=prerelease::$prerelease"
    #     $changelog = Get-Content .\changelog.md
    #     $last_change = ($changelog | Select-String -Pattern "^#\s" | Select-Object -Skip 1 -First 1).LineNumber - 2
    #     ($changelog | Select-Object -First $last_change) -join "`n" | Out-File .\releasenotes.md
    #     Compress-Archive -Path .\dcs_liberation -DestinationPath "dcs_liberation.$version.zip" -Compression Optimal

    - name: create-archive
      run: |
        Compress-Archive -Path .\dcs-mission-buzzer -DestinationPath "dcs-mission-buzzer.zip" -Compression Optimal
    
    - uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        # body_path: releasenotes.md
        draft: false
        #prerelease: ${{ steps.version.outputs.prerelease }}


    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dcs-mission-buzzer.zip
        asset_name: dcs-mission-buzzer.zip
        asset_content_type: application/zip
      
